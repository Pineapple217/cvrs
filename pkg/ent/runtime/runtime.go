// Code generated by ent, DO NOT EDIT.

package runtime

import (
	"time"

	"github.com/Pineapple217/cvrs/pkg/ent/artist"
	"github.com/Pineapple217/cvrs/pkg/ent/image"
	"github.com/Pineapple217/cvrs/pkg/ent/processedimage"
	"github.com/Pineapple217/cvrs/pkg/ent/release"
	"github.com/Pineapple217/cvrs/pkg/ent/releaseappearance"
	"github.com/Pineapple217/cvrs/pkg/ent/schema"
	"github.com/Pineapple217/cvrs/pkg/ent/task"
	"github.com/Pineapple217/cvrs/pkg/ent/track"
	"github.com/Pineapple217/cvrs/pkg/ent/trackappearance"
	"github.com/Pineapple217/cvrs/pkg/ent/user"
	"github.com/Pineapple217/cvrs/pkg/pid"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	artistMixin := schema.Artist{}.Mixin()
	artistMixinFields0 := artistMixin[0].Fields()
	_ = artistMixinFields0
	artistFields := schema.Artist{}.Fields()
	_ = artistFields
	// artistDescName is the schema descriptor for name field.
	artistDescName := artistFields[0].Descriptor()
	// artist.NameValidator is a validator for the "name" field. It is called by the builders before save.
	artist.NameValidator = artistDescName.Validators[0].(func(string) error)
	// artistDescCreatedAt is the schema descriptor for created_at field.
	artistDescCreatedAt := artistFields[1].Descriptor()
	// artist.DefaultCreatedAt holds the default value on creation for the created_at field.
	artist.DefaultCreatedAt = artistDescCreatedAt.Default.(func() time.Time)
	// artistDescUpdatedAt is the schema descriptor for updated_at field.
	artistDescUpdatedAt := artistFields[2].Descriptor()
	// artist.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	artist.DefaultUpdatedAt = artistDescUpdatedAt.Default.(func() time.Time)
	// artist.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	artist.UpdateDefaultUpdatedAt = artistDescUpdatedAt.UpdateDefault.(func() time.Time)
	// artistDescID is the schema descriptor for id field.
	artistDescID := artistMixinFields0[0].Descriptor()
	// artist.DefaultID holds the default value on creation for the id field.
	artist.DefaultID = artistDescID.Default.(func() pid.ID)
	imageMixin := schema.Image{}.Mixin()
	imageHooks := schema.Image{}.Hooks()
	image.Hooks[0] = imageHooks[0]
	imageMixinFields0 := imageMixin[0].Fields()
	_ = imageMixinFields0
	imageFields := schema.Image{}.Fields()
	_ = imageFields
	// imageDescFile is the schema descriptor for file field.
	imageDescFile := imageFields[0].Descriptor()
	// image.FileValidator is a validator for the "file" field. It is called by the builders before save.
	image.FileValidator = imageDescFile.Validators[0].(func(string) error)
	// imageDescOriginalName is the schema descriptor for original_name field.
	imageDescOriginalName := imageFields[1].Descriptor()
	// image.OriginalNameValidator is a validator for the "original_name" field. It is called by the builders before save.
	image.OriginalNameValidator = imageDescOriginalName.Validators[0].(func(string) error)
	// imageDescDimentionWidth is the schema descriptor for dimention_width field.
	imageDescDimentionWidth := imageFields[4].Descriptor()
	// image.DimentionWidthValidator is a validator for the "dimention_width" field. It is called by the builders before save.
	image.DimentionWidthValidator = imageDescDimentionWidth.Validators[0].(func(int) error)
	// imageDescDimentionHeight is the schema descriptor for dimention_height field.
	imageDescDimentionHeight := imageFields[5].Descriptor()
	// image.DimentionHeightValidator is a validator for the "dimention_height" field. It is called by the builders before save.
	image.DimentionHeightValidator = imageDescDimentionHeight.Validators[0].(func(int) error)
	// imageDescCreatedAt is the schema descriptor for created_at field.
	imageDescCreatedAt := imageFields[7].Descriptor()
	// image.DefaultCreatedAt holds the default value on creation for the created_at field.
	image.DefaultCreatedAt = imageDescCreatedAt.Default.(func() time.Time)
	// imageDescUpdatedAt is the schema descriptor for updated_at field.
	imageDescUpdatedAt := imageFields[8].Descriptor()
	// image.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	image.DefaultUpdatedAt = imageDescUpdatedAt.Default.(func() time.Time)
	// image.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	image.UpdateDefaultUpdatedAt = imageDescUpdatedAt.UpdateDefault.(func() time.Time)
	// imageDescID is the schema descriptor for id field.
	imageDescID := imageMixinFields0[0].Descriptor()
	// image.DefaultID holds the default value on creation for the id field.
	image.DefaultID = imageDescID.Default.(func() pid.ID)
	processedimageMixin := schema.ProcessedImage{}.Mixin()
	processedimageMixinFields0 := processedimageMixin[0].Fields()
	_ = processedimageMixinFields0
	processedimageFields := schema.ProcessedImage{}.Fields()
	_ = processedimageFields
	// processedimageDescDimentions is the schema descriptor for dimentions field.
	processedimageDescDimentions := processedimageFields[1].Descriptor()
	// processedimage.DimentionsValidator is a validator for the "dimentions" field. It is called by the builders before save.
	processedimage.DimentionsValidator = processedimageDescDimentions.Validators[0].(func(int) error)
	// processedimageDescCreatedAt is the schema descriptor for created_at field.
	processedimageDescCreatedAt := processedimageFields[3].Descriptor()
	// processedimage.DefaultCreatedAt holds the default value on creation for the created_at field.
	processedimage.DefaultCreatedAt = processedimageDescCreatedAt.Default.(func() time.Time)
	// processedimageDescUpdatedAt is the schema descriptor for updated_at field.
	processedimageDescUpdatedAt := processedimageFields[4].Descriptor()
	// processedimage.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	processedimage.DefaultUpdatedAt = processedimageDescUpdatedAt.Default.(func() time.Time)
	// processedimage.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	processedimage.UpdateDefaultUpdatedAt = processedimageDescUpdatedAt.UpdateDefault.(func() time.Time)
	// processedimageDescID is the schema descriptor for id field.
	processedimageDescID := processedimageMixinFields0[0].Descriptor()
	// processedimage.DefaultID holds the default value on creation for the id field.
	processedimage.DefaultID = processedimageDescID.Default.(func() pid.ID)
	releaseMixin := schema.Release{}.Mixin()
	releaseMixinFields0 := releaseMixin[0].Fields()
	_ = releaseMixinFields0
	releaseFields := schema.Release{}.Fields()
	_ = releaseFields
	// releaseDescName is the schema descriptor for name field.
	releaseDescName := releaseFields[0].Descriptor()
	// release.NameValidator is a validator for the "name" field. It is called by the builders before save.
	release.NameValidator = releaseDescName.Validators[0].(func(string) error)
	// releaseDescID is the schema descriptor for id field.
	releaseDescID := releaseMixinFields0[0].Descriptor()
	// release.DefaultID holds the default value on creation for the id field.
	release.DefaultID = releaseDescID.Default.(func() pid.ID)
	releaseappearanceFields := schema.ReleaseAppearance{}.Fields()
	_ = releaseappearanceFields
	// releaseappearanceDescReleaseID is the schema descriptor for release_id field.
	releaseappearanceDescReleaseID := releaseappearanceFields[0].Descriptor()
	// releaseappearance.DefaultReleaseID holds the default value on creation for the release_id field.
	releaseappearance.DefaultReleaseID = releaseappearanceDescReleaseID.Default.(func() pid.ID)
	// releaseappearanceDescArtistID is the schema descriptor for artist_id field.
	releaseappearanceDescArtistID := releaseappearanceFields[1].Descriptor()
	// releaseappearance.DefaultArtistID holds the default value on creation for the artist_id field.
	releaseappearance.DefaultArtistID = releaseappearanceDescArtistID.Default.(func() pid.ID)
	// releaseappearanceDescOrder is the schema descriptor for order field.
	releaseappearanceDescOrder := releaseappearanceFields[2].Descriptor()
	// releaseappearance.OrderValidator is a validator for the "order" field. It is called by the builders before save.
	releaseappearance.OrderValidator = releaseappearanceDescOrder.Validators[0].(func(int) error)
	taskMixin := schema.Task{}.Mixin()
	taskMixinFields0 := taskMixin[0].Fields()
	_ = taskMixinFields0
	taskFields := schema.Task{}.Fields()
	_ = taskFields
	// taskDescCreatedAt is the schema descriptor for created_at field.
	taskDescCreatedAt := taskFields[4].Descriptor()
	// task.DefaultCreatedAt holds the default value on creation for the created_at field.
	task.DefaultCreatedAt = taskDescCreatedAt.Default.(func() time.Time)
	// taskDescUpdatedAt is the schema descriptor for updated_at field.
	taskDescUpdatedAt := taskFields[5].Descriptor()
	// task.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	task.DefaultUpdatedAt = taskDescUpdatedAt.Default.(func() time.Time)
	// task.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	task.UpdateDefaultUpdatedAt = taskDescUpdatedAt.UpdateDefault.(func() time.Time)
	// taskDescID is the schema descriptor for id field.
	taskDescID := taskMixinFields0[0].Descriptor()
	// task.DefaultID holds the default value on creation for the id field.
	task.DefaultID = taskDescID.Default.(func() pid.ID)
	trackMixin := schema.Track{}.Mixin()
	trackMixinFields0 := trackMixin[0].Fields()
	_ = trackMixinFields0
	trackFields := schema.Track{}.Fields()
	_ = trackFields
	// trackDescTitle is the schema descriptor for title field.
	trackDescTitle := trackFields[0].Descriptor()
	// track.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	track.TitleValidator = trackDescTitle.Validators[0].(func(string) error)
	// trackDescPosition is the schema descriptor for position field.
	trackDescPosition := trackFields[1].Descriptor()
	// track.PositionValidator is a validator for the "position" field. It is called by the builders before save.
	track.PositionValidator = trackDescPosition.Validators[0].(func(int) error)
	// trackDescID is the schema descriptor for id field.
	trackDescID := trackMixinFields0[0].Descriptor()
	// track.DefaultID holds the default value on creation for the id field.
	track.DefaultID = trackDescID.Default.(func() pid.ID)
	trackappearanceFields := schema.TrackAppearance{}.Fields()
	_ = trackappearanceFields
	// trackappearanceDescTrackID is the schema descriptor for track_id field.
	trackappearanceDescTrackID := trackappearanceFields[0].Descriptor()
	// trackappearance.DefaultTrackID holds the default value on creation for the track_id field.
	trackappearance.DefaultTrackID = trackappearanceDescTrackID.Default.(func() pid.ID)
	// trackappearanceDescArtistID is the schema descriptor for artist_id field.
	trackappearanceDescArtistID := trackappearanceFields[1].Descriptor()
	// trackappearance.DefaultArtistID holds the default value on creation for the artist_id field.
	trackappearance.DefaultArtistID = trackappearanceDescArtistID.Default.(func() pid.ID)
	// trackappearanceDescOrder is the schema descriptor for order field.
	trackappearanceDescOrder := trackappearanceFields[2].Descriptor()
	// trackappearance.OrderValidator is a validator for the "order" field. It is called by the builders before save.
	trackappearance.OrderValidator = trackappearanceDescOrder.Validators[0].(func(int) error)
	userMixin := schema.User{}.Mixin()
	userMixinFields0 := userMixin[0].Fields()
	_ = userMixinFields0
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescUsername is the schema descriptor for username field.
	userDescUsername := userFields[0].Descriptor()
	// user.UsernameValidator is a validator for the "username" field. It is called by the builders before save.
	user.UsernameValidator = func() func(string) error {
		validators := userDescUsername.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(username string) error {
			for _, fn := range fns {
				if err := fn(username); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// userDescPassword is the schema descriptor for password field.
	userDescPassword := userFields[1].Descriptor()
	// user.PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	user.PasswordValidator = userDescPassword.Validators[0].(func([]byte) error)
	// userDescIsAdmin is the schema descriptor for is_admin field.
	userDescIsAdmin := userFields[2].Descriptor()
	// user.DefaultIsAdmin holds the default value on creation for the is_admin field.
	user.DefaultIsAdmin = userDescIsAdmin.Default.(bool)
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[3].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescID is the schema descriptor for id field.
	userDescID := userMixinFields0[0].Descriptor()
	// user.DefaultID holds the default value on creation for the id field.
	user.DefaultID = userDescID.Default.(func() pid.ID)
}

const (
	Version = "v0.14.4"                                         // Version of ent codegen.
	Sum     = "h1:/DhDraSLXIkBhyiVoJeSshr4ZYi7femzhj6/TckzZuI=" // Sum of ent codegen.
)
